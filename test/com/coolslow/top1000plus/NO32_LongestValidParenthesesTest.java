package com.coolslow.top1000plus;

import com.coolslow.leetcode.top1000plus.NO32_LongestValidParentheses;
import org.junit.Assert;
import org.junit.Test;

public class NO32_LongestValidParenthesesTest {

    @Test
    public void shouldFindLongestValidParentheses() {
        String s1 = "((())", s2 = "((((()))))", s
        int result1 = NO32_LongestValidParentheses.longestValidParentheses(s1);
        int result2 = NO32_LongestValidParentheses.longestValidParentheses(s2);
        // 极端条件测试用例：430
        int result3 = NO32_LongestValidParentheses.longestValidParentheses(s3);
        System.out.println(result3);

        int result4 = NO32_LongestValidParentheses.longestValidParenthesesWithDp(s1);
        int result5 = NO32_LongestValidParentheses.longestValidParenthesesWithDp(s2);

        Assert.assertEquals(4, result1);
        Assert.assertEquals(10, result2);
        Assert.assertEquals(4, result4);
        Assert.assertEquals(10, result5);
    }
}
