package com.coolslow.datastruct.skill.greedy;

public class Concepts {

    /*
     *1 概念
     * 贪心的意思在于在作出选择时, 每次都要选择对自身最为有利的结果，保证自身利益的最大化。贪心算法就是利用这种贪心思想而得出一种算法。
     * 贪心算法可以简单描述为：大事化小，小事化了。对于一个较大的问题，通过找到与子问题的重叠，把复杂的问题划分为多个小问题。
     * 并且对于每个子问题的解进行选择，找出最优值，进行处理，再找出最优值，再处理。
     * 也就是说贪心算法是一种在每一步选择中都采取在当前状态下最好或最优的选择，从而希望得到结果是最好或最优的算法。
     *
     * 贪心算法在对问题求解时，总是做出在当前看来是最好的选择。也就是说，不从整体最优上加以考虑，所做出的仅是在某种意义上的局部最优解。
     * 贪心算法不是对所有问题都能得到整体最优解，但对范围相当广泛的许多问题他能产生整体最优解或者是整体最优解的近似解。
     *
     */

    /*
     * 2 算法流程
     * （1）建立数学模型来描述问题。
     * （2）把求解的问题分成若干个子问题。
     * （3）对每一子问题求解，得到子问题的局部最优解。
     * （4）把子问题的局部最优解合成原来问题的一个解。
     *
     */


    /*
     * Tasks：
     */
}
